{"version":3,"sources":["Component/Navbarr.js","Component/Alert.js","Component/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbarr","props","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","Alert","alert","word","lower","toLowerCase","charAt","toUpperCase","slice","captialize","msg","data-bs-dismiss","Textform","useState","Text","setText","heading","value","onChange","event","console","log","target","rows","newText","newTextt","split","join","length","App","setMode","setAlert","showAlert","message","About","document","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f99c14f.chunk.js","sourcesContent":["import React from 'react'\r\n// import PropTypes  from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbarr(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                 {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>  */}\r\n                                 <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a> \r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/About\">{props.About}</Link>\r\n                            </li> */}\r\n                        </ul>\r\n                      \r\n                        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const captialize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{captialize(props.alert.type)}</strong>:{props.alert.msg}\r\n            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div> \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react'\r\n\r\nexport const Textform = (props) => {\r\n    const handleUpclick=()=>{\r\n        // console.log(\"Uppercase was clicked\"+Text);\r\n         let newText=Text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n\r\n    const handleOnchange =(event)=>{\r\n        console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    \r\n    const handleLowclick=()=>{\r\n        let newTextt=Text.toLowerCase();\r\n        setText(newTextt);\r\n\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText=Text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    const ClearText =()=>{\r\n        let newText='';\r\n        setText(newText);\r\n    }\r\n\r\n\r\n    const [Text,setText]=useState(\" \");\r\n    // setText(\"abkabka\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"Container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                {/* <label for=\"my-box\" class=\"form-label\"></label> */}\r\n                <textarea className=\"form-control\" id=\"mybox\" value={Text} onChange={handleOnchange} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLowclick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={ClearText}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Removes Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\">\r\n            <h2>Your text Summary</h2>\r\n            <p>{Text.split(\" \").length} Words and {Text.length} characters</p>\r\n            <p>Time taken to read {0.008*Text.split(\" \").length}</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text.length>0?Text:\"Enter the text something above to preview here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import './App.css';\n// import { Textform } from './Component/Textform'; \n// import About from './Component/About';\nimport Navbarr from './Component/Navbarr';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n// import {\n//    BrowserRouter as Router,   Switch,\n//    Route\n//  } from \"react-router-dom\";\n\n\nimport {Textform} from './Component/Textform';\nfunction App() {\n  const [mode,setMode]=useState('dark');\n  const [alert,setAlert]=useState(null);\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n  }\n  \n  const togglemode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n     {/* <Router>  */}\n    <Navbarr title=\"TextUtils\" mode={mode}  About=\"About\" togglemode={togglemode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n     {/* <Switch> \n           <Route path=\"/about\">\n            <About />\n          </Route> \n           <Route path=\"/\">  */}\n            <Textform  heading=\"Enter the text to Analyze below\" /> \n           {/* </Route>\n        </Switch>  */}\n    </div>\n    {/* </Router>  */}\n    </>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}